{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","className","AppBar","position","Toolbar","Button","color","Typography","variant","align","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQA+BeA,MAxBf,WAEE,OACE,sBAAKC,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,CAAQD,UAAU,aAAaE,SAAS,SAAxC,SACE,cAACC,EAAA,EAAD,CAASH,UAAU,aAAnB,SACE,cAACI,EAAA,EAAD,CAAQJ,UAAU,aAAaK,MAAM,UAArC,SACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAU,OAAOQ,MAAM,OAAhD,4BAMN,qBAAKR,UAAU,WAAf,SACE,8BACE,4FCRKS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d2db4705.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <AppBar className=\"App-header\" position=\"static\">\n        <Toolbar className=\"App-header\">\n          <Button className=\"menuButton\" color=\"inherit\">  \n            <Typography variant=\"h4\" className=\"logo\" align=\"left\">\n                FTT, LLC\n            </Typography>\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <div className=\"App-body\">\n        <div>\n          <p>\n              Site is under construction. Please check back soon.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}